class ClassWiFiEsp8266{constructor(_rx,_tx){if(this.Instance)return this.Instance;ClassWiFiEsp8266.prototype.Instance=this,this._Name="ClassEsp8266WiFi",this._Wifi=void 0,this._Bus=void 0,this._Ssid=void 0,this._Scan=void 0,this._Ip=void 0,this.Init(_rx,_tx)}InitBus(_rx,_tx){if(_rx&&_tx){let opt={rx:_rx,tx:_tx,baud:115200};this._Bus=UARTbus.AddBus(opt)}}Init(nc,bus,callback){if(process.env.MODULES.includes("Wifi")){let pass;this._Wifi=require("Wifi"),this._Wifi.scan(aps=>{this._Scan=aps;let s=require("Storage");if(!s.list().includes("APs.json"))throw"No JSON file found!";let found=aps.map(a=>a.ssid),wrt=s.readJSON("APs.json",!0);found.forEach(fName=>{wrt.forEach(sName=>{fName==sName.ssid&&(this._Ssid=sName.ssid,pass=sName.pass)})}),this._Wifi.connect(this._Ssid,{password:pass},err=>{if(err)throw err;this._Wifi.getIP((err,info)=>{if(err)throw err;this._Ip=info.ip})})})}else{let pass;PrimarySerial.setup(115200),this._Wifi=require("ClassBaseWIFIesp8266.min.js").setup(PrimarySerial,err=>{if(err)throw err;this._Wifi.getAPs((err,aps)=>{if(err)throw err;{this._Scan=aps;let s=require("Storage");if(!s.list().includes("APs.json"))throw"No JSON file found!";let found=aps.map(a=>a.ssid),wrt=s.readJSON("APs.json",!0);found.forEach(fName=>{wrt.forEach(sName=>{fName==sName.ssid&&(this._Ssid=sName.ssid,pass=sName.pass)})}),this._Wifi.connect(this._Ssid,pass,err=>{if(err)throw err;this._Wifi.getIP((emsg,ipAdress)=>{if(emsg)throw err;this._Ip=ipAdress,callback()})})}})})}}}exports=ClassWiFiEsp8266;